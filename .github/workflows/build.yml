name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Run tests
        run: |
          pytest tests/ --cov=warc_processor
          
      - name: Build binary
        run: |
          pip install pyinstaller
          VERSION=$(python3 -c "exec(open('setup.py').read()); print(__version__)" 2>/dev/null || date +"%Y.%m.%d")
          RELEASE_NAME="warc-processor-${VERSION}-linux-x86_64"
          RELEASE_DIR="dist/${RELEASE_NAME}"
          rm -rf build dist/*
          mkdir -p "${RELEASE_DIR}"
          python3 -m PyInstaller --onefile --name warc-processor --add-data "config.yaml:." warc_processor_main.py
          cp dist/warc-processor "${RELEASE_DIR}/"
          cp config.yaml "${RELEASE_DIR}/"
          cp README.md "${RELEASE_DIR}/"
          cp LICENSE "${RELEASE_DIR}/"
          cat > "${RELEASE_DIR}/QUICKSTART.md" << 'EOF'
          # WARC Processor Quick Start Guide
          
          This is a standalone binary release of the WARC Processor tool.
          
          ## Usage
          
          1. Make the binary executable:
             chmod +x warc-processor
          
          2. Run the processor:
             ./warc-processor [arguments]
          
          The binary includes all necessary dependencies and does not require Python to be installed.
          
          For full documentation, please see README.md
          EOF
          cd dist
          tar czf "${RELEASE_NAME}.tar.gz" "${RELEASE_NAME}"
          rm -rf "${RELEASE_NAME}"
          echo "Created release archive: dist/${RELEASE_NAME}.tar.gz"
      - name: Test binary
        run: |
          # Recalculate version and release name
          VERSION=$(python3 -c "exec(open('setup.py').read()); print(__version__)" 2>/dev/null || date +"%Y.%m.%d")
          RELEASE_NAME="warc-processor-${VERSION}-linux-x86_64"
          echo "Testing binary for release: ${RELEASE_NAME}"
          # Extract the archive
          mkdir -p dist/test_extract
          tar -xzf "dist/${RELEASE_NAME}.tar.gz" -C dist/test_extract
          # Run the binary with --help and check output
          OUTPUT=$(dist/test_extract/${RELEASE_NAME}/warc-processor --help || true)
          echo "$OUTPUT"
          if [[ "$OUTPUT" != *"Usage"* ]]; then
            echo "Binary test failed: missing 'Usage' in output"
            exit 1
          fi
          echo "Binary test passed"
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: warc-processor-binary
          path: dist/warc-processor-*.tar.gz
